import golosinas.*
import mariano.*

describe "tests de mariano" {

	fixture {
		chocolatin.pesoInicial(100)
		mariano.comprar(chocolatin)
		mariano.comprar(caramelo)
		mariano.comprar(bombon)
	}

	test "test comprar" {
		assert.equals(3, mariano.golosinas().size())
		assert.that(mariano.golosinas().contains(chocolatin))
		assert.that(mariano.golosinas().contains(caramelo))
		assert.that(mariano.golosinas().contains(bombon))
		assert.notThat(mariano.golosinas().contains(chupetin))
	}
	
	test "probar golosinas" {
		/* habilitar las lineas anuladas cuando se complete la definicion 
		 * de las golosinas
		 */
		assert.equals(100, chocolatin.peso())
		assert.equals(5, caramelo.peso())
		assert.equals(15, bombon.peso())
		mariano.probarGolosinas()
		assert.equals(98, chocolatin.peso())
		assert.equals(4, caramelo.peso())
		assert.equals(11, bombon.peso())
		
		
	}
	test "hayGolosinasSinTACC" {
		assert.equals(true, mariano.hayGolosinasSinTACC())
		
	}
	test "preciosCuidados" { 
		assert.equals(false, mariano.preciosCuidados())
		}
	/* 	
	test "golosinaDeSabor" {
		
		assert.equals(chocolatin, mariano.golosinaDeSabor(chocolate) )
		 
	}
	test "golosinasDeSabor"{
		falta
	}*/
	test "sabores" {
		assert.equals(["chocolate","frutilla"], mariano.sabores())
	}
	test "golosinaMasCara"{
		assert.equals(chocolatin, mariano.golosinaMasCara())
	}
	test "pesoGolosinas"{
		assert.equals(120,mariano.pesoGolosinas())
	}
	test "golosinasFaltantes"{
		assert.equals([oblea], mariano.golosinasFaltantes(oblea))
		
	}
}

